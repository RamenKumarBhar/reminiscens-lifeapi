HOST: http://test.reminiscens.me/api/

--- Reminiscens RESTful Explorelife API version 0.1 ---
---
This RESTful API provides HTTP access to resources that support the Reminiscens' tablet app for stimulating elderly 
and their families in sharing memories and motivate conversation by exploring content related to 
these memories' place and period of time. The goal is to stimulate a healthy practice of positive reminiscence that will 
benefit elders' subjective wellbeing. 

<h3> About the Reminiscens Project</h3>
Reminiscens is a social informatics project funded by the <a href="http://www.lifeparticipation.org/">Lifeparticipation 
Research Group</a> at the <a href="http://www.disi.unitn.it/"> University of Trento </a>. It is the result of participatory 
research action and design with local elders, with the goal of motivating face to face social interactions between older 
adults and their younger relatives. Not only we have worked on designing an application, but we have worked to build 
an interesting knowledge base of content that will stimulate people to reminisce. It is work in progress, towards the 
finalization of a Ph.D. in Information and Communication Technologies 

---

--
Sessions 

<p>The session resource endpoint is where the experience begins. Applications create a session using either an username/password pair 
or an authentication token provided by a third party service (e.g., facebook, google). After creating the session, the created session 
instance must be included in all of the API calls. Is the only non-RESTful element of this APIn (but implemented in the most RESTful way 
possible). Sessions are made of: </p>
 
 + **auth_token:** An authentication token identifying the session
 + **expiration:** Duration of the token in minutes                                       

<p><pre><code>
<a id="session"><b>The Session Resource:</b></a>
    "Session" : {
        "auth_token" : "054b13b875efac0604bfa8f21ab92dc26e1e34f5",  
        "expiration" : "10080"                                       
    }
</pre></code></code>

<p>Various authentication services can be used to create a session. A <a href="#service">Service</a> is specified on creating a session
and is identified by: </p>

 + **name:** The name of the authentication service provider (facebook, google, reminiscens)
 + **authString:** Authentication string provided by the service. For using our own authenticaiton service, name is reminiscens and authString = email + "!_-_!" + sha1(password) 

<p><pre><code>
<a id="service"><b>The Service Resource:</b></a>
    "Service":{
        "name": "reminiscens", 
        "authString": "ugo.fantozzi@gmail.com!_-_!a94a8fe5ccb19ba61c4c0873d391e987982fbbd3"          
    }
</pre></code></code>

--

<p><b>Create a session endpoint.</b> </p>

<p>Request Body: </p>

 + <b> Mandatory. </b> The authentication <a href="#service">Service</a> resource.

<p>Response Body:</p>

 + The newly created <a href="#session">Session</a> 
 + The <a href="#user">User</a> that created the session.

<p><pre><code>
Example of Javascript code for creating a <a href="#session">Session</a>, using our own authentication service 
based on user email and password.)</p>
    var passSha1 = $.sha1($("#password").val() + salt);
    var sessionData = new Object;
    sessionData.name = "reminiscens";
    sessionData.authString = $("#email").val() + "!_-_!" + passSha1;                    
    $.ajax({
        type: "POST",
        url: "resources/session",
        data: JSON.stringify(sessionData),
        async: false,
        success: function (data) {
            alert("ok");
        },
        error: function (data) {
            alert("error");
        },
        dataType: "json",
            contentType: "application/json"
        });
</pre></code></p>

POST /session
> Content-Type: application/json
{  
    "Service":{
        "name": "reminiscens"
        "authString": "ugo.fantozzi@gmail.com!_-_!a94a8fe5ccb19ba61c4c0873d391e987982fbbd3"  
    }
}
< 200
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "1", 
        "status_message":"Session was created"   
    },    
    "Session" : {
        "auth_token" : "054b13b875efac0604bfa8f21ab92dc26e1e34f5",
        "expiration" : "10080" 
    },
    "User" : {
        "url": "/user/999", 
        "user_id":"999"
        "user_name":"ugo.fantozzi", 
        "user_email": "ugo.fantozzi@gmail.com", 
        "user_verified": "true", 
        "user_name_verified": "true", 
        "profile_picture":"http://www.flickr.com/photos/mykalburns/2807451879/",
        "Person" : {
            "url": "/person/999", 
            "fullname":"Ugo Fantozzi", 
            "firstname": "Ugo", 
            "lastname": "Fantozzi", 
            "birthdate": "07/07/1934", 
            "birthplace": "Genova, Italia",
            "birthplace_lat": "44.4056499", 
            "birthplace_lon": "8.946256",
            "home":"Trento, Italia",
            "home_lat": "46.0696924", 
            "home_lon": "11.1210886",
            "locale" : "IT_it"
        }
    },
}
+++++
< 401
< Content-Type: application/json
{  
    "status_code": "41", 
    "status_message":"Auth string is not valid"
}
+++++
< 501
< Content-Type: application/json
{  
    "status_code": "51", 
    "status_message":"The resource you tried to create is incomplete"
}
+++++
< 501
< Content-Type: application/json
{  
    "status_code": "52", 
    "status_message":"The resource you tried to create already exists"
}

--
Users
The <b>User resource</b> endpoint gives access to all the operations available on user data, including also his
<a href="#person">Personal</a> profile information. Notice that there is a separation between the entities 
<a href="#user">User</a> and <a href="#person">Person</a>. A person might exist in our dataset wihtout user 
information, referring to people that is mentioned in life stories or public historical records that we used
to stimulate reminiscence

<p>A <a href="#user">User</a> is includes the following information </p>

 + **user_email:** user's registered email
 + **user_id:** user unique identificator
 + **user_name:** username used for authentication
 + **user_verified:** user has verified that this account belongs to him. Non verified accounts are limited 
to no more than 10 stories and 50 mementos
 + **user_nameverified:** user has verified/updated his username (generated first by the system)
 + **user_profilepicture:** URL to a profile picture
 + A **<a href="#"person>Person</a>**, including at least: 
  + **fullname:** person's fullname 
  + **birthdate:** person's birthdate in dd/mm/yyyy format
  + **birthplace:** person's textual name of the birthplace


<p><pre><code>
<a id="user"><b>The User Resource:</b></a>
    "User" : {
        "url": "/user/999", 
        "user_id":"999"
        "user_name":"ugo.fantozzi", 
        "user_email": "ugo.fantozzi@gmail.com", 
        "user_verified": "true", 
        "user_nameverified": "true",        
        "user_profilepicture":"http://www.flickr.com/photos/mykalburns/2807451879/",
        "Person" : {
            "url": "/person/999", 
            "fullname":"Ugo Fantozzi", 
            "birthdate": "07/07/1934", 
            "birthplace": "Genova, Italia"
        }
    }
</pre></code></code>

--

<p><b>Create <a href="#user">User</a> endpoint </b></p>
<p>Request:</p>
 
 + A <a href="#user">User</a> including: 
    + <b>Mandatory.</b> user_email.
    + A <a href="#person">Person</a>. resource with:  
        + <b>Mandatory.</b> fullname 
        + <b>Mandatory.</b> birthdate
        + <b>Mandatory.</b> birthplace

<p>Response: </p> 

 + The newly created <a href="#user">User</a> resource with a generated user_name
 + The newly created <a href="#person">Person</a> resource with the provided details (as part of the user data object)
 + The <a href="#timeline">Timeline</a> of the person with the first event: his/her birth
 + The <a href="#context">Contextual</a> reminiscence recommendations for the person based on her first event: his/her birth
 + A <a href="#response_status">Response status</a> resource (included in most api calls responses to gie further details of errors) 
 + A new <a href ="#session"> Session </a> for the user

POST /user
> Content-Type: application/json
{   
    "User" : {
        "user_email":"ugo.fantozzi@gmail.com",
        "Person" : {
            "firstname": "Ugo Fantozzi",
            "birthdate": "07/07/1934>", 
            "birthplace": "Genova, Italia",
        }
    }
}
< 200
< Content-Type: application/json
{  
    "User" : {
        "url": "/user/999", 
        "user_id":"999", 
        "user_email":"ugo.fantozzi@gmail.com"
        "user_name":"ugo.fantozzi98832", 
        "user_verified": "false", 
        "user_name_verified": "false"
        "Person" : {
            "url": "/person/999", 
            "fullname":"Ugo Fantozzi", 
            "birthdate": "07/07/1934", 
            "birthplace": "Genova, Italia"
            "Timeline" : {[
                {
                    "storyId" : "999"
                    "decade" : "1930", 
                    "startDate": "1934,7,7 0:00:00",
                    "endDate": "1934,7,7 0:00:00",
                    "headline": "Nascita",
                    "text": "Ugo Fantozzi e nato a Genova",
                    "richtext" : "/story/999/richtext", 
                    "tags": { ["self-contributed", "childhood"] },
                    "mementoList": { [
                        { 
                            "url": "http://www.flickr.com/photos/mykalburns/2807451879/",
                            "credit": "Burns! http://www.flickr.com/photos/mykalburns/",
                            "caption": "Foto di Ugo circa la sua nascita in 1934",
                            "thumbnail": "",
                            "type" : "picture",
                            "cover" : "true",
                            "index" : 1
                        }, 
                        {
                            "url": "https://soundcloud.com/er_murena/fantozzi-all",
                            "credit": "er_murena @ soundcloud! https://soundcloud.com/er_murena",
                            "caption": "Ugo's music",
                            "thumbnail": "",
                            "type" : "audio",
                            "cover" : "false",
                            "index" : 2
                        }
                    ]}
                },
                {
                    "startDate": "1960,9,9 0:00:00",
                    "endDate": "1960,9,9 0:00:00",
                    "headline": "Matrimonio",
                    "text": "Sposa a Pina Fantozzi, ragazza con chi ha frequentato la Scuola Elementare \"\"Raffaello Sanzio\"\" a Trento ",
                    "mementoList": { [
                        "url": "https://dl.dropbox.com/u/2797542/timeline/fantozzi/Fantozzi_il_ritorno.png",
                        "credit": "Wikipedia",
                        "caption": "",
                        "thumbnail": ""
                }         
            ]}
        }
    },
    "Response_Status" : {
        "status_code": "1", 
        "status_message":"User was created"   
    },  
    "Session" : {
        "auth_token" : "<new authentication token associated to the user's current session>",
        "expiration" : "<minutes before the token expires, 60 minutes for unconfirmed users>" 
    }
}
+++++
< 401
< Content-Type: application/json
{  
    "status_code": "41", 
    "status_message":"API Key is not valid"
}
+++++
< 401
< Content-Type: application/json
{  
    "status_code": "42", 
    "status_message":"Auth string is not valid"
}
+++++
< 501
< Content-Type: application/json
{  
    "status_code": "51", 
    "status_message":"The resource you tried to create is incomplete"
}
+++++
< 501
< Content-Type: application/json
{  
    "status_code": "52", 
    "status_message":"The resource you tried to create already exists"
}

<p><b>Update user endpoint</b></p>
<p>Request: </p>
 
 + The <a href="#user">User</a>

<p>Response:</p> 

 + The <a href="#user">User</a> resource with its updated information

POST /user
> Content-Type: application/json
{   
    "Session" : {
        "auth_token" : "054b13b875efac0604bfa8f21ab92dc26e1e34f5",
        "expiration" : "10080" 
    }, 
    "User" : {
        "user__email":"ugo.fantozzi@gmail.com"
        "user_name":"ugo.fantozzi", 
        "user_verified": "true", 
        "user_name_verified": "true"
        "Person" : {
            "fullname":"Ugo Fantozzi", 
            "firstname": "Ugo", 
            "lastname": "Fantozzi", 
            "birthdate": "07/07/1934", 
            "birthplace": "Genova, Italia",
            "birthplace_lat": "44.4056499", 
            "birthplace_lon": "8.946256",
            "home":"Trento, Italia",
            "home_lat": "46.0696924", 
            "home_lon": "11.1210886",
            "locale" : "IT_it"
        }
    }
}
< 200
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "2", 
        "status_message":"User was updated"   
    },    
    "User" : {
        "url": "/user/999",
        "user_email":"ugo.fantozzi@gmail.com"
        "user_name":"ugo.fantozzi", 
        "user_verified": "true", 
        "user_name_verified": "true"
        "Person" : {
            "url": "/person/999", 
            "fullname":"Ugo Fantozzi", 
            "firstname": "Ugo", 
            "lastname": "Fantozzi", 
            "birthdate": "07/07/1934", 
            "birthplace": "Genova, Italia",
            "birthplace_lat": "44.4056499", 
            "birthplace_lon": "8.946256",
            "home":"Trento, Italia",
            "home_lat": "46.0696924", 
            "home_lon": "11.1210886",
            "locale" : "IT_it"
        }
    }
}
+++++
< 401
< Content-Type: application/json
{  
    "Response_Status": {
        "status_code": "42", 
        "status_message":"Auth string is not valid"
    }
}
+++++
< 501
< Content-Type: application/json
{   "Response_Status": {
        "status_code": "51", 
        "status_message":"The resource you tried to create is incomplete"
    }
}
+++++
< 501
< Content-Type: application/json
{  
    "Response_Status": {
        "status_code": "52", 
        "status_message":"The resource you tried to create already exists"
    }
}

--
Person Resource
<p>A <a href="#person">Person </a>resource encapsulates information about users that interact with the system by adding, 
visualizing or editing life stories, exploring the surrounding context (composed by public related content). Every person 
is identified by one unique <code>id</code> and has at least fullname, a birthdate and birhtplace.</p>. A person can exist 
without a <a href="#user">User</a> associated to it, in which case the person refers to a public figure, existing in our
historical knowledge base (see the <a href="http://docs.reminiscens.apiary.io/">Lifecontext API</a> to know more about this 
knolwedge base)</p>

<p>Through this API, users can only access a person's available information from their URI and if it has privileges. 
For creation and update operations, the <a href="#user">User</a> endpoint must be used</p>
--

<p> Get the basic information related to the Person identified by <code>id</code>, 
including the following information as mandatory: </p>

 + **fullname:** user's fullname 
 + **birthdate:** user's birthdate in dd/mm/yyyy format
 + **birthplace:** textual name of the birthplace

<p>Optionally, personal information could also include:</p>

 + **firstname:** user's firstname
 + **lastname:** user's lastname
 + **birthplace_lat:** latitude coordinates of the birthplace
 + **birthplace_lon:** longitude coordintates of the birthplace
 + **home:** textual name of the current home
 + **home_lat:** latitude coordinates of the current home
 + **home_lon:** longitude coordintates of the current home
 + **locale:** languate localization code

<p><pre><code>
<a id="user"><b>The Person Resource (complete):</b></a>
    "Person" : {
        "url": "/person/999", 
        "user_id":"999",
        "fullname":"Ugo Fantozzi", 
        "firstname": "Ugo", 
        "lastname": "Fantozzi", 
        "birthdate": "07/07/1934", 
        "birthplace": "Genova, Italia",
        "birthplace_lat": "44.4056499", 
        "birthplace_lon": "8.946256",
        "home":"Trento, Italia",
        "home_lat": "46.0696924", 
        "home_lon": "11.1210886",
        "locale" : "IT_it"
    }
</pre></code></code>

GET /person/{id}
> Accept: application/json
{"url":"/person/999"}
{ 
    "Session" : {
        "auth_token" : "054b13b875efac0604bfa8f21ab92dc26e1e34f5",
        "expiration" : "10080" 
    }
}
< 200 
< Content-Type: application/json
{ 
    "Response_Status" : { 
        "status_code": "1", 
        "status_message":"OK"
    },
    "Person" : {
        "url": "/person/999", 
        "user_id":"999",
        "fullname":"Ugo Fantozzi", 
        "firstname": "Ugo", 
        "lastname": "Fantozzi", 
        "birthdate": "07/07/1934", 
        "birthplace": "Genova, Italia",
        "birthplace_lat": "44.4056499", 
        "birthplace_lon": "8.946256",
        "home":"Trento, Italia",
        "home_lat": "46.0696924", 
        "home_lon": "11.1210886",
        "locale" : "IT_it"
    }
}
+++++
< 401
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "41", 
        "status_message":"Auth token is not valid"
    }
}
+++++
< 401
< Content-Type: application/json
{
    "Response_Status" : {
        "status_code": "42", 
        "status_message":"Session ID is not valid"
    }
}

--
Life story resource 
The life story resource is the core element of the API. Every person has life stories to share, starting with their birth. 
--

Create a story

POST /person/{id}/lifestory
> Content-Type: application/json
{  
    "api_key" : "<api key for registered application>",  
    "auth_token" : "<valid session auth token>",
    "Lifestory" : {
        "...":"..."
    }
}
< 200
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "1", 
        "status_message":"Resource was created"
    }
    "Lifestory" : {
        "url": "/person/{id}"
    }
}
+++++
< 401
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "41", 
        "status_message":"API Key is not valid"
    }
}
+++++
< 401
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "42", 
        "status_message":"Session ID is not valid"
    }
}
+++++
< 501
< Content-Type: application/json
{    
    "Response_Status" : {
        "status_code": "51", 
        "status_message":"The resource you tried to create is incomplete"
    }
}
+++++
< 501
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "52", 
        "status_message":"The resource you tried to create already exists"
    }
}

Get a person's particular life story
GET /person/{id}/lifestory/{id}
> Content-Type: application/json
{  
    "api_key" : "<api key for registered application>",  
    "auth_token" : "<valid session auth token>",
}
< 200
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "1", 
        "status_message":"Resource was created"
    }
    "Lifestory" : {
        "url": "/person/{id}"
    }
}
+++++
< 401
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "41", 
        "status_message":"API Key is not valid"
    }
}
+++++
< 401
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "42", 
        "status_message":"Session ID is not valid"
    }
}
+++++
< 501
< Content-Type: application/json
{    
    "Response_Status" : {
        "status_code": "51", 
        "status_message":"The resource you tried to create is incomplete"
    }
}
+++++
< 501
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "52", 
        "status_message":"The resource you tried to create already exists"
    }
}

-
Get a person's timeline of life stories
-
GET /person/{id}/lifestory
> Content-Type: application/json
{  
    "api_key" : "<api key for registered application>",  
    "auth_token" : "<valid session auth token>",
}
< 200
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "1", 
        "status_message":"Resource was created"
    },
    "Timeline" : [
        "Lifestory" : {
            "id": "{id}"
        }, 
        "Lifestory" : {
            "id": "{id}"
        }
    ]
}
+++++
< 401
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "41", 
        "status_message":"API Key is not valid"
    }
}
+++++
< 401
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "42", 
        "status_message":"Session ID is not valid"
    }
}
+++++
< 501
< Content-Type: application/json
{    
    "Response_Status" : {
        "status_code": "51", 
        "status_message":"The resource you tried to create is incomplete"
    }
}
+++++
< 501
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "52", 
        "status_message":"The resource you tried to create already exists"
    }
}

-
Update a story
-
PUT /person/{id}/lifestory/{id}
> Content-Type: application/json
{  
    "api_key" : "<api key for registered application>",  
    "auth_token" : "<valid session auth token>",
    "Lifestory" : {
        "...":"..."
    }
}
< 200
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "1", 
        "status_message":"Resource was created"
    }
    "Lifestory" : {
        "url": "/person/{id}"
    }
}
+++++
< 401
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "41", 
        "status_message":"API Key is not valid"
    }
}
+++++
< 401
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "42", 
        "status_message":"Session ID is not valid"
    }
}
+++++
< 501
< Content-Type: application/json
{    
    "Response_Status" : {
        "status_code": "51", 
        "status_message":"The resource you tried to create is incomplete"
    }
}
+++++
< 501
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "52", 
        "status_message":"The resource you tried to create already exists"
    }
}

--
Memento resource 
The session resource allows the platform to manage authentication and authorization to 
execute operations on the API. 
--


--
Question resource 
The session resource allows the platform to manage authentication and authorization to 
execute operations on the API. 
--

-
Get a question 
-
GET /question/{birthyear}/{focusyear}
> Content-Type: application/json
{ "url":"/question/1940/1948"}
< 200
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "1", 
        "status_message":"Resource exists"
    },
        "Question_List": [
            {
                "Question": {
                    "url": "/question/999",
                    "life_chapter": "childhood",
                    "question_text": "Cosa ti ricordi della tua prima bicileta",
                    "question_type": "open"
                }
            },
            {
                "Question": {
                    "url": "/question/998",
                    "life_chapter": "childhood",
                    "question_text": "Come si chiamava la tua scuola elementare",
                    "question_type": "open"
                }
            }
        ]
}

GET /question/{lifechapter}
> Content-Type: application/json
{ "url":"/question/childhood"}
< 200
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "1", 
        "status_message":"Resource exists"
    },
    "Question_List": [
        {
            "Question": {
                "url": "/question/999",
                "life_chapter": "childhood",
                "question_text": "Cosa ti ricordi della tua prima bicileta",
                "question_type": "open"
            }
        },
        {
            "Question": {
                "url": "/question/998",
                "life_chapter": "childhood",
                "question_text": "Come si chiamava la tua scuola elementare",
                "question_type": "open"
            }
        }
    ]
}

-- 
Response status Resource

<p><pre><code>
<a id="response_status"><b>The Response Status Resource (complete):</b></a>
    "Response_Status" : {
        "status_code": "1", 
        "status_message":"User was created"   
    },    
</pre></code></code>
--


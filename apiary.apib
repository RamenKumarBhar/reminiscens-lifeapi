HOST: http://test.reminiscens.me/api/

--- Reminiscens RESTful Explorelife API version 0.1 ---
---
This RESTful API provides HTTP access to resources that support the Reminiscens' tablet app for stimulating elderly 
and their families in sharing memories and motivate conversation by exploring content related to 
these memories' place and period of time. The goal is to stimulate a healthy practice of positive reminiscence that will 
benefit elders' subjective wellbeing. 

<h3> About the Reminiscens Project</h3>
Reminiscens is a social informatics project funded by the <a href="http://www.lifeparticipation.org/">Lifeparticipation 
Research Group</a> at the <a href="http://www.disi.unitn.it/"> University of Trento </a>. It is the result of participatory 
research action and design with local elders, with the goal of motivating face to face social interactions between older 
adults and their younger relatives. Not only we have worked on designing an application, but we have worked to build 
an interesting knowledge base of content that will stimulate people to reminisce. It is work in progress, towards the 
finalization of a Ph.D. in Information and Communication Technologies 
---


--
Sessions 

<p>The session resource endpoint is where the experience begins. Applications create a session using either an username/password pair 
or an authentication token provided by a third party service (e.g., facebook, google). After creating the session, the created session 
instance must be included in all of the API calls. Is the only non-RESTful element of this APIn (but implemented in the most RESTful way 
possible). </p>

<p>Sessions are made of: </p>
 
 + **auth_token:** An authentication token identifying the session
 + **expiration:** Duration of the token in minutes                                       

<p><pre><code>
<a id="session"><b>The Session Resource:</b></a>
    "Session" : {
        "auth_token" : "054b13b875efac0604bfa8f21ab92dc26e1e34f5",  
        "expiration" : "10080"                                       
    }
</pre></code></code>
--
 
Create a session endpoint. To create the session, a service is required, which is specified by:  

 + **name:** The name of the authentication service provider (facebook, google, reminiscens)
 + **authString:** Authentication string provided by the service. If the service name is reminiscens, it will be the email + "!_-_!" + sha1(password) )

<p><pre><code>
<a id="service"><b>The Service Resource:</b></a>
<br>
    "Service":{
        "name": "reminiscens",                      
        "authString": "ugo.fantozzi@gmail.com!_-_!a94..."          
    }

</pre></code></code>

<p>Below, an example of Javascript code to create a Session based on user email and password.</p>

<p><pre><code>
<br>
    var passSha1 = $.sha1($("#password").val() + salt);
    var sessionData = new Object;
    sessionData.name = "reminiscens";
    sessionData.authString = $("#email").val() + "!_-_!" + passSha1;                    
    $.ajax({
        type: "POST",
        url: "resources/session",
        data: JSON.stringify(sessionData),
        async: false,
        success: function (data) {
            alert("ok");
        },
        error: function (data) {
            alert("error");
        },
        dataType: "json",
            contentType: "application/json"
        });

</pre></code></p>
POST /session
> Content-Type: application/json
{  
    "Service":{
        "name": "reminiscens"
        "authString": "ugo.fantozzi@gmail.com!_-_!a94a8fe5ccb19ba61c4c0873d391e987982fbbd3"  
    }
}
< 200
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "1", 
        "status_message":"Session was created"   
    },    
    "Person" : {
        "url": "/person/999", 
        "fullname":"Ugo Fantozzi", 
        "firstname": "Ugo", 
        "lastname": "Fantozzi", 
        "birthdate": "07/07/1934", 
        "birthplace": "Genova, Italia",
        "birthplace_lat": "44.4056499", 
        "birthplace_lon": "8.946256",
        "home":"Trento, Italia",
        "home_lat": "46.0696924", 
        "home_lon": "11.1210886",
        "locale" : "IT_it"
    }
    "User" : {
        "url": "/user/999", 
        "user_id":"999"
        "user_name":"ugo.fantozzi", 
        "user_email": "ugo.fantozzi@gmail.com", 
        "user_verified": "true", 
        "user_name_verified": "true", 
        "profile_picture":"http://www.flickr.com/photos/mykalburns/2807451879/"
    },
    "Session" : {
        "auth_token" : "054b13b875efac0604bfa8f21ab92dc26e1e34f5",
        "expiration" : "10080" 
    }
}
+++++
< 401
< Content-Type: application/json
{  
    "status_code": "41", 
    "status_message":"Auth string is not valid"
}
+++++
< 501
< Content-Type: application/json
{  
    "status_code": "51", 
    "status_message":"The resource you tried to create is incomplete"
}
+++++
< 501
< Content-Type: application/json
{  
    "status_code": "52", 
    "status_message":"The resource you tried to create already exists"
}

--
Users
The <b>user resource</b> endpoint gives access to all the operations available on user data 
--

<p>Create a user with initial personal details. A user is composed by: </p>

 + **user_id:** user unique identificator
 + **user_name:** username used for authentication
 + **user_email:** user's registered email
 + **user_verified:** user has verified that this account belongs to him
 + **user_name_verified:** user has verified/updated his username (generated first by the system)
 + **user_profile_picture:** URL to a profile picture

<p><pre><code>
<a id="user"><b>The User Resource:</b></a>
<br>
    "User" : {
        "url": "/user/999", 
        "user_id":"999"
        "user_name":"ugo.fantozzi", 
        "user_email": "ugo.fantozzi@gmail.com", 
        "user_verified": "true", 
        "user_name_verified": "true",        
        "profile_picture":"http://www.flickr.com/photos/mykalburns/2807451879/"
    }
</pre></code></code>

<p>To create the <a href="#user">User</a>, you will also need to specify some personal details, sending also a 
<b>Person</b> resource, including the following as mandatory: </p>

 + **fullname:** user's fullname 
 + **birthdate:** user's birthdate in dd/mm/yyyy format
 + **birthplace:** textual name of the birthplace

<p>Optionally, personal information could also include:</p>

 + **firstname:** user's firstname
 + **lastname:** user's lastname
 + **birthplace_lat:** latitude coordinates of the birthplace
 + **birthplace_lon:** longitude coordintates of the birthplace
 + **home:** textual name of the current home
 + **home_lat:** latitude coordinates of the current home
 + **home_lon:** longitude coordintates of the current home
 + **locale:** languate localization code

<p><pre><code>
<a id="user"><b>The Person Resource (complete):</b></a>
    "Person" : {
        "url": "/person/999", 
        "fullname":"Ugo Fantozzi", 
        "firstname": "Ugo", 
        "lastname": "Fantozzi", 
        "birthdate": "07/07/1934", 
        "birthplace": "Genova, Italia",
        "birthplace_lat": "44.4056499", 
        "birthplace_lon": "8.946256",
        "home":"Trento, Italia",
        "home_lat": "46.0696924", 
        "home_lon": "11.1210886",
        "locale" : "IT_it"
    }
</pre></code></code>

<p>The response includes the generated user name, person details, a response 
status resource (included in most api calls responses to gie further details of 
errors) and a newly created session </p>


<p><pre><code>
<a id="response_status"><b>The Response Status Resource (complete):</b></a>
    "Response_Status" : {
        "status_code": "1", 
        "status_message":"User was created"   
    },    
</pre></code></code>

POST /user
> Content-Type: application/json
{    
    "User" : {
        "user_email":"ugo.fantozzi@gmail.com"
    }
    "Person" : {
        "firstname": "Ugo Fantozzi",
        "birthdate": "07/07/1934>", 
        "birthplace": "Genova, Italia",
    }
}
< 200
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "1", 
        "status_message":"User was created"   
    },    
    "Person" : {
        "url": "/person/999", 
        "fullname":"Ugo Fantozzi", 
        "firstname": "Ugo", 
        "lastname": "Fantozzi", 
        "birthdate": "07/07/1934", 
        "birthplace": "Genova, Italia",
        "birthplace_lat": "44.4056499", 
        "birthplace_lon": "8.946256",
        "home":"Trento, Italia",
        "home_lat": "46.0696924", 
        "home_lon": "11.1210886",
        "locale" : "IT_it"
    }
    "User" : {
        "url": "/user/999", 
        "user_id":"999", 
        "user_email":"ugo.fantozzi@gmail.com"
        "user_name":"ugo.fantozzi98832", 
        "user_verified": "true", 
        "user_name_verified": "true"
    }
    "Session" : {
        "auth_token" : "<new authentication token associated to the user's current session>",
        "expiration" : "<minutes before the token expires, 60 minutes for unconfirmed users>" 
    }
}
+++++
< 401
< Content-Type: application/json
{  
    "status_code": "41", 
    "status_message":"API Key is not valid"
}
+++++
< 401
< Content-Type: application/json
{  
    "status_code": "42", 
    "status_message":"Auth string is not valid"
}
+++++
< 501
< Content-Type: application/json
{  
    "status_code": "51", 
    "status_message":"The resource you tried to create is incomplete"
}
+++++
< 501
< Content-Type: application/json
{  
    "status_code": "52", 
    "status_message":"The resource you tried to create already exists"
}



--
Person Resource
<p>A <br>person resource</br> encapsulates information about users that interact with the system by adding, visualizing or editing
life stories, exploring the surrounding context (composed by public related content)</p>
<p>Every person is identified by one unique <code>id</code> and has a bare minimum, 
one name and one lastname.</p>
--
-
<p>Get the basic information related to the Person identified by <code>id</code>.</p>

<table style="width: 100%; margin: 12px 0 0 0;"><tbody>
<tr><td style="padding-left: 0;" colspan="2"><strong>Required Parameters</strong></td></tr>
<tr><td style="padding-left: 0;" colspan="2">api_key</td></tr>
<tr><td style="padding-left: 0;" colspan="2">auth_token</td></tr>
</tbody></table>
-
GET /person/{id}
> Accept: application/json
{  
    "api_key": "<api key for registered application>",
    "auth_token": "<session id of the application issuing the request>"
}
< 200 
< Content-Type: application/json
{ 
    "Response_Status" : { 
        "status_code": "1", 
        "status_message":"OK"
    },
    "Person" : {
        "url": "/person/{id}", 
        "fullname":"<full name of the person>", 
        "firstname": "<only first name>", 
        "middlename": "<only middle name>", 
        "lastname": "<only last name>", 
        "birthdate": "<birthdate in format dd/mm/yyyy>",
        "birthplace": "<textual description of birthplace>",
        "birthplace_lat": "<birthplace latitude>", 
        "birthplace_lon": "<birthplace longitude>", 
        "current_home":"<current home location in textual description>",
        "current_home_lat":"<current home location latitudes>",
        "current_home_lon":"<current home location latitudes>",
        "locale" : "IT_it"
    }
}
+++++
< 401
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "41", 
        "status_message":"API Key is not valid"
    }
}
+++++
< 401
< Content-Type: application/json
{
    "Response_Status" : {
        "status_code": "42", 
        "status_message":"Session ID is not valid"
    }
}

-
<p>Get the user information related to the Person identified by <code>id</code>.</p>

<table style="width: 100%; margin: 12px 0 0 0;"><tbody>
<tr><td style="padding-left: 0;" colspan="2"><strong>Required Parameters</strong></td></tr>
<tr><td style="padding-left: 0;" colspan="2">api_key</td></tr>
<tr><td style="padding-left: 0;" colspan="2">auth_token</td></tr>
</tbody></table>
-
GET /person/{id}/user
> Accept: application/json
{  
    "api_key": "<api key for registered application>",
    "auth_token": "<session id of the application issuing the request>"
}
< 200 
< Content-Type: application/json
{ 
    "Response_Status" : {
        "status_code": "1", 
        "status_message":"OK"
    }
    "User" : {
        "url": "/person/{id}/user", 
        "user_id":"<user id as use in the User Management Module (external API)>"
        "user_name":"<user nickname used for login purposes>", 
        "user_email": "<user email if there is one>", 
        "user_modified": "<No if the user has not yet modified his nickname and is only using the automatic>"
    }
}
+++++
< 401
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "41", 
        "status_message":"API Key is not valid"
    }
}
+++++
< 401
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "42", 
        "status_message":"Session ID is not valid"
    }
}

GET /person/56
> Accept: application/json
{  
    "api_key": "playgroundKey=42",
    "auth_token": "playgroundSession=12345"
}
< 200 
< Content-Type: application/json
{ 
    "Response_Status" : {
        "status_code": "1", 
        "status_message":"OK"
    }
    "Person" : {
        "url": "/person/56", 
        "fullname":"Ugo Fantozzi", 
        "firstname": "Ugo", 
        "lastname": "Fantozzi", 
        "birthdate": "01/01/1956",
        "birthplace": "Genova, Italy",
        "birthplace_lat": 44.4167, 
        "birthplace_lon": 8.9239, 
        "current_home":"Genova, Italy",
        "current_home_lat": 8.9239,
        "current_home_lon": 44.4167, 
        "locale" : "IT_it"
    }
}

-
<p>Updates information about a Person</p>

<table style="width: 100%; margin: 12px 0 0 0;"><tbody>
<tr><td style="padding-left: 0;" colspan="2"><strong>Required Parameters</strong></td></tr>
<tr><td style="padding-left: 0;" colspan="2">api_key</td></tr>
<tr><td style="padding-left: 0;" colspan="2">auth_token</td></tr>
<tr><td style="padding-left: 0;" colspan="2">The Person</td></tr>
</tbody></table>

<table style="width: 100%; margin: 12px 0 0 0;"><tbody>
<tr><td style="padding-left: 0;" colspan="2"><strong>The Person Resource required information</strong></td></tr>
<tr><td style="padding-left: 0;">fullname</td><td style="padding-left: 0;">string</td></tr>
<tr><td style="padding-left: 0;">birthdate</td><td style="padding-left: 0;">date in format dd/mm/yyyy</td></tr>
<tr><td style="padding-left: 0;">birthplace</td><td style="padding-left: 0;">textual name of Birth Place</td></tr>
<tr><td style="padding-left: 0;" colspan="2"><strong>The Person Resource optional information</strong></td></tr>
<tr><td style="padding-left: 0;">firstname</td><td style="padding-left: 0;">string</td></tr>
<tr><td style="padding-left: 0;">lastname</td><td style="padding-left: 0;">string</td></tr>
<tr><td style="padding-left: 0;">birthplace_lat</td><td style="padding-left: 0;">real latitude of Birth Place</td></tr>
<tr><td style="padding-left: 0;">birthplace_lat</td><td style="padding-left: 0;">real longitud of Birth Place</td></tr>

</tbody></table>
-
PUT /person
> Content-Type: application/json
{
    "api_key" : "<api key for registered application>",
    "auth_token" : "<session id of the application issuing the request>",
    "Person" : {
        "fullname":"<full name of the person>", 
        "firstname": "<only first name>", 
        "lastname": "<only last name>", 
        "birthdate": "<birthdate in format dd/mm/yyyy>", 
        "birthplace": "<textual description of birthplace>",
        "birthplace_lat": "<birthplace latitude>", 
        "birthplace_lon": "<birthplace longitude>",
        "current_home":"<current location in textual description>",
        "current_home_lat":"<current home location latitudes>",
        "current_home_lon":"<current home location latitudes>",
        "locale" : "IT_it"
    }
}
< 200
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "1", 
        "status_message":"Resource was updated"
    },    
    "Person" : {
        "url": "/person/{id}", 
        "fullname":"<full name of the person>", 
        "firstname": "<only first name>", 
        "lastname": "<only last name>", 
        "birthdate": "<birthdate in format dd/mm/yyyy>", 
        "birthplace": "<textual description of birthplace>",
        "birthplace_lat": "<birthplace latitude>", 
        "birthplace_lon": "<birthplace longitude>",
        "current_home":"<current location in textual description>"
        "current_coordinates":"<current location in textual description>"
        "locale" : "IT_it"
    }
}
+++++
< 401
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "41", 
        "status_message":"API Key is not valid"
    }
}
+++++
< 401
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "42", 
        "status_message":"Session ID is not valid"
    }
}
+++++
< 501
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "51", 
        "status_message":"Information sentd for update was incomplete"
    }
}

-
<p>Updates user information about a Person</p>
-
PUT /person/{id}/user
> Content-Type: application/json
{  
    "api_key": "<api key for registered application>",
    "auth_token": "<session id of the application issuing the request>",    
    "User" : {
        "url": "/person/{id}/user", 
        "user_id":"<user id as use in the User Management Module (external API)>"
        "user_name":"<user nickname used for login purposes>", 
        "user_email": "<user email if there is one>", 
        "user_modified": "<No if the user has not yet modified his nickname and is only using the automatic>"
    }
}
< 200
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "1", 
        "status_message":"Resource was created"
    },
    "Person" : {
        "url": "/person/{id}", 
        "fullname":"<full name of the person>", 
        "firstname": "<only first name>", 
        "lastname": "<only last name>", 
        "birthdate": "<birthdate in format dd/mm/yyyy>", 
        "birthplace": "<textual description of birthplace>",
        "birthplace_lat": "<birthplace latitude>", 
        "birthplace_lon": "<birthplace longitude>",
        "current_home":"<current location in textual description>"
        "current_coordinates":"<current location in textual description>"
        "locale" : "IT_it"
    }
    "User" : {
        "url": "/person/{id}/user", 
        "user_id":"<user id as use in the User Management Module (external API)>"
        "user_name":"<full name of the person>", 
        "user_email": "<user email if there is one>", 
        "user_modified": "<No if the user has not yet modified his nickname and is only using the automatic>", 
    }
}
+++++
< 401
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "41", 
        "status_message":"API Key is not valid"
    }
}
+++++
< 401
< Content-Type: application/json
{    
    "Response_Status" : {
        "status_code": "42", 
        "status_message":"Session ID is not valid"
    }
}
+++++
< 501
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "51", 
        "status_message":"The resource you tried to create is incomplete"
    }
}
+++++
< 501
< Content-Type: application/json
{    
    "Response_Status" : {
        "status_code": "52", 
        "status_message":"The resource you tried to create already exists"
    }
}

--
Life story resource 
The life story resource is the core element of the API. Every person has life stories to share, starting with their birth. 
--
-
Create a story
-
POST /person/{id}/lifestory
> Content-Type: application/json
{  
    "api_key" : "<api key for registered application>",  
    "auth_token" : "<valid session auth token>",
    "Lifestory" : {
        "...":"..."
    }
}
< 200
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "1", 
        "status_message":"Resource was created"
    }
    "Lifestory" : {
        "url": "/person/{id}"
    }
}
+++++
< 401
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "41", 
        "status_message":"API Key is not valid"
    }
}
+++++
< 401
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "42", 
        "status_message":"Session ID is not valid"
    }
}
+++++
< 501
< Content-Type: application/json
{    
    "Response_Status" : {
        "status_code": "51", 
        "status_message":"The resource you tried to create is incomplete"
    }
}
+++++
< 501
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "52", 
        "status_message":"The resource you tried to create already exists"
    }
}

-
Get a person's particular life story
-
GET /person/{id}/lifestory/{id}
> Content-Type: application/json
{  
    "api_key" : "<api key for registered application>",  
    "auth_token" : "<valid session auth token>",
}
< 200
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "1", 
        "status_message":"Resource was created"
    }
    "Lifestory" : {
        "url": "/person/{id}"
    }
}
+++++
< 401
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "41", 
        "status_message":"API Key is not valid"
    }
}
+++++
< 401
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "42", 
        "status_message":"Session ID is not valid"
    }
}
+++++
< 501
< Content-Type: application/json
{    
    "Response_Status" : {
        "status_code": "51", 
        "status_message":"The resource you tried to create is incomplete"
    }
}
+++++
< 501
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "52", 
        "status_message":"The resource you tried to create already exists"
    }
}

-
Get a person's timeline of life stories
-
GET /person/{id}/lifestory
> Content-Type: application/json
{  
    "api_key" : "<api key for registered application>",  
    "auth_token" : "<valid session auth token>",
}
< 200
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "1", 
        "status_message":"Resource was created"
    },
    "Timeline" : [
        "Lifestory" : {
            "id": "{id}"
        }, 
        "Lifestory" : {
            "id": "{id}"
        }
    ]
}
+++++
< 401
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "41", 
        "status_message":"API Key is not valid"
    }
}
+++++
< 401
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "42", 
        "status_message":"Session ID is not valid"
    }
}
+++++
< 501
< Content-Type: application/json
{    
    "Response_Status" : {
        "status_code": "51", 
        "status_message":"The resource you tried to create is incomplete"
    }
}
+++++
< 501
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "52", 
        "status_message":"The resource you tried to create already exists"
    }
}

-
Update a story
-
PUT /person/{id}/lifestory/{id}
> Content-Type: application/json
{  
    "api_key" : "<api key for registered application>",  
    "auth_token" : "<valid session auth token>",
    "Lifestory" : {
        "...":"..."
    }
}
< 200
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "1", 
        "status_message":"Resource was created"
    }
    "Lifestory" : {
        "url": "/person/{id}"
    }
}
+++++
< 401
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "41", 
        "status_message":"API Key is not valid"
    }
}
+++++
< 401
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "42", 
        "status_message":"Session ID is not valid"
    }
}
+++++
< 501
< Content-Type: application/json
{    
    "Response_Status" : {
        "status_code": "51", 
        "status_message":"The resource you tried to create is incomplete"
    }
}
+++++
< 501
< Content-Type: application/json
{  
    "Response_Status" : {
        "status_code": "52", 
        "status_message":"The resource you tried to create already exists"
    }
}

--
Memento resource 
The session resource allows the platform to manage authentication and authorization to 
execute operations on the API. 
--

--
Question resource 
The session resource allows the platform to manage authentication and authorization to 
execute operations on the API. 
--

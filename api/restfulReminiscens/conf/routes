# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

# User and Session Management
GET     /user                           controllers.UM.getUsers()
GET     /user/:uid                      controllers.UM.getUser(uid: Long)
POST    /user                           controllers.UM.createUser()
PUT     /user/:uid                      controllers.UM.updateUser(uid: Long)
DELETE  /user/:uid                      controllers.UM.deleteUser(uid: Long)
GET     /session                        controllers.UM.getSessions()
POST    /session                        controllers.UM.createSession()
PUT     /session/:sid                   controllers.UM.updateSession(sid: Long)
DELETE  /session/:sid                   controllers.UM.deleteSession(sid: Long)

# People, Life Stories and Timeline
GET     /person                         controllers.Person.getPersonAll()
GET     /person/:id                     controllers.Person.getPerson(id: Long)
POST    /person                         controllers.Person.createPerson()
PUT     /person/:id                     controllers.Person.updatePerson(id: Long)
DELETE  /person/:id                     controllers.Person.deletePerson(id: Long)

GET     /person/:id/timeline            controllers.Timeline.getPersonTimeline(id: Long)
POST    /person/:id/timeline            controllers.Timeline.synchronizePersonTimeline(id: Long)

GET     /person/:id/lifestory/:lsid     controllers.LifeStory.getLifeStory(id: Long, lsid: Long)
POST    /person/:id/lifestory           controllers.LifeStory.createLifeStory(id: Long)
PUT     /person/:id/lifestory/:lsid     controllers.LifeStory.updateLifeStory(id: Long, lsid: Long)
DELETE  /person/:id/lifestory/:lsid     controllers.LifeStory.deleteLifeStory(id: Long, lsid: Long)

GET     /person/:id/memento             controllers.Memento.getMementoAll(id: Long)
GET     /person/:id/memento/:mid        controllers.Memento.getMemento(id: Long, mid: Long)
POST    /person/:id/memento/:mid        controllers.Memento.createMemento(id: Long, mid: Long)
PUT     /person/:id/memento/:mid        controllers.Memento.updateMemento(id: Long, mid: Long)
DELETE  /person/:id/memento/:mid        controllers.Memento.deleteMemento(id: Long, mid: Long)

GET     /person/:id/relationships       controllers.Relationship.getPersonRelationships(id: Long)
GET     /person/:id/curators            controllers.Relationship.getPersonCurators(id: Long)
PUT     /relationship/:id               controllers.Relationship.updateRelationship(id: Long)
POST    /relationship                   controllers.Relationship.addRelationship()
DELETE  /relationship/:id               controllers.Relationship.deleteRelationship(id: Long)


# Contextual Reminiscence
GET     /context/:cid                   controllers.ContextualReminiscence.getContext(cid: Long)
GET     /context/:cid/curators          controllers.ContextualReminiscence.getContextCurators(cid: Long)
GET     /context/:cid/memento/:mid      controllers.ContextualReminiscence.getContextMemento(cid: Long, mid: Long)
POST    /context/:cid/memento           controllers.ContextualReminiscence.createContextMemento(cid: Long)
PUT     /context/:cid/memento           controllers.ContextualReminiscence.updateContextMemento(cid: Long)
DELETE  /context/:cid/memento/:mid      controllers.ContextualReminiscence.deleteContextMemento(cid: Long, mid: Long)
GET     /context/:cid/question          controllers.ContextualReminiscence.getContextQuestions(cid: Long)
GET     /context/:cid/question/:decade  controllers.ContextualReminiscence.getContextQuestionsForDecade(cid: Long, decade: Long)
GET     /context/:cid/question/curated  controllers.ContextualReminiscence.getContextQuestionsByCurators(cid: Long)
POST    /context/:cid/question          controllers.ContextualReminiscence.createContextCuratedQuestions(cid: Long)

# General Questions
GET     /question/:byear/:fyear/:lang   controllers.Questions.getGeneralQuestionsForYear(byear: Long, fyear: Long, lang: String)
GET     /question/:chapter/:lang        controllers.Questions.getGeneralQuestionsForLifeChapter(chapter: String, lang: String)

# General Public Mementos API (lifecontext proxy)
GET     /memento/random/:lang           controllers.PublicMemento.getRandomMemento(lang: String)
GET     /memento/:mid                   controllers.PublicMemento.getMemento(mid: Long)
GET     /memento/:decade/:place         controllers.PublicMemento.getMementoList(decade: Long, place: String, lat ?= null, lon ?= null, rad ?= null, lang: String ?= "it_IT")
